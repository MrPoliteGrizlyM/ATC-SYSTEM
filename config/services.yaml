# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true
        public: false        # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    admin.driver:
        class: App\Admin\DriverAdmin
        arguments: [~, App\Entity\Driver, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Водители }
        public: true
    admin.vehicle:
        class: App\Admin\VehicleAdmin
        arguments: [~, App\Entity\Vehicle, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Транспорт }
        public: true
    admin.station:
        class: App\Admin\StationAdmin
        arguments: [~, App\Entity\Station, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Станции }
        public: true
    admin.line:
        class: App\Admin\LineAdmin
        arguments: [~, App\Entity\Line, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Маршруты}
        public: true

    admin.block.tools:
        class: App\Admin\Block\ToolsBlock
        arguments:
        - ~
        - '@sonata.templating'
        tags:
        - { name: sonata.block }